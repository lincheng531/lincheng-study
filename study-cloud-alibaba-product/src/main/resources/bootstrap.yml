server:
  port: 8083
spring:
  application:
    #应用名称
    name: study-cloud-alibaba-product
  cloud:
    nacos:
      discovery:
        #nacos 注册中心地址
        server-addr: http://localhost:8848
        #注册到哪个命名空间中
        #namespace: 3e81c560-3c91-484f-bb67-c1a4e01ce688
        #不注册到注册中心(默认注册)
        register-enabled: true
      config:
        #nacos 配置中心地址
        server-addr: http://localhost:8848
        #是否开启监听和自动刷新
        refresh-enabled: true
        #告诉从哪个命名空间获取配置
        #namespace: 3e81c560-3c91-484f-bb67-c1a4e01ce688
        #配置文件名称(Data Id)
        #name: ${spring.application.name}
        #文件后缀是什么类型
        file-extension: yml
        #从哪个组进行配置获取（Group）
        group: DEFAULT_GROUP
        #多文件配置
        extension-configs[0]:
          dataId: ${spring.application.name}.yml
          group: DEFAULT_GROUP
          #true时(默认flase),@RefreshScope才能生效
          refresh: true
        extension-configs[1]:
          dataId: all.yml
          group: DEFAULT_GROUP
          refresh: true
    stream:
      bindings:
        output: {destination: study-rocketMQ-topic, content-type: application/json}
      rocketmq:
        binder:
          name-server: localhost:9876
        bindings:
          output:
            producer:
              #是否启用 Producer,默认值: true
              enable: true
              #是否使用同步得方式发送消息。默认值: false
              sync: false

dubbo:
  application:
    #dubbo应用名称
    name: ${spring.application.name}
    #是否使用远程的元数据中心，如果使用，则会将元数据信息注册到指定的元数据中心，否则使用本地元数据中心
    metadata-type: local
  registry:
    # 注册中心与注册地址
    address: spring-cloud://127.0.0.1:8848
    #不将注册中心用于配置中心
    use-as-config-center: false
    #是否允许注册
    register: true
    #是否允许订阅
    #subscribe: true
    # 注册者允许的协议
    #accepts: dubbo,rest
    #consumer:
    # 启动时不检查生产者的状态，防止生产者未启动时启动失败
    #check: false
    #provider:
    # 服务提供者要求使用随机Token加密，防止消费者绕过注册中心调用
    #token: true
  #Dubbo服务暴露的协议配置
  protocol:
    #协议名称
    name: dubbo
    # dubbo协议端口(1 表示自增端口,从20880开始)
    port: -1
  #dubbo服务扫描基准包
  scan:
    base-packages: com.lincheng.study.api
    #cloud:
    # Dubbo 消费端订阅服务端的应用名，多个服务提供者用逗号分隔
    #subscribed-services: study-dubbo-product

